{"ast":null,"code":"var _jsxFileName = \"/home/kadir/client/src/components/SpeechToText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MdMic, MdPause, MdStop } from 'react-icons/md'; // Import microphone, pause, and stop icons from react-icons library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechToText = () => {\n  _s();\n  const [transcripts, setTranscripts] = useState(Array.from({\n    length: 5\n  }, () => '')); // Array of transcripts\n\n  const handleRecognition = index => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n    recognition.onresult = event => {\n      const newTranscripts = [...transcripts];\n      newTranscripts[index] = Array.from(event.results).map(result => result[0].transcript).join('');\n      setTranscripts(newTranscripts);\n    };\n    recognition.start();\n  };\n  const stopRecognition = () => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.stop();\n  };\n  const clearTranscript = index => {\n    const newTranscripts = [...transcripts];\n    newTranscripts[index] = '';\n    setTranscripts(newTranscripts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: transcripts.map((transcript, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleRecognition(index),\n        style: {\n          backgroundColor: transcript ? 'red' : 'blue',\n          border: 'none',\n          marginRight: '5px'\n        },\n        children: [transcript ? /*#__PURE__*/_jsxDEV(MdPause, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(MdMic, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 51\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => clearTranscript(index),\n        style: {\n          backgroundColor: 'gray',\n          border: 'none',\n          marginRight: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MdStop, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"ejIZv/AovbHLYHuwiK+9lzDlDeA=\");\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","useEffect","MdMic","MdPause","MdStop","jsxDEV","_jsxDEV","SpeechToText","_s","transcripts","setTranscripts","Array","from","length","handleRecognition","index","recognition","window","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","newTranscripts","results","map","result","transcript","join","start","stopRecognition","stop","clearTranscript","children","style","display","alignItems","marginBottom","onClick","backgroundColor","border","marginRight","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kadir/client/src/components/SpeechToText.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MdMic, MdPause, MdStop } from 'react-icons/md'; // Import microphone, pause, and stop icons from react-icons library\n\nconst SpeechToText = () => {\n  const [transcripts, setTranscripts] = useState(Array.from({ length: 5 }, () => '')); // Array of transcripts\n\n  const handleRecognition = index => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n\n    recognition.onresult = event => {\n      const newTranscripts = [...transcripts];\n      newTranscripts[index] = Array.from(event.results)\n        .map(result => result[0].transcript)\n        .join('');\n      setTranscripts(newTranscripts);\n    };\n\n    recognition.start();\n  };\n\n  const stopRecognition = () => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.stop();\n  };\n\n  const clearTranscript = index => {\n    const newTranscripts = [...transcripts];\n    newTranscripts[index] = '';\n    setTranscripts(newTranscripts);\n  };\n\n  return (\n    <div>\n      {transcripts.map((transcript, index) => (\n        <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n          <button onClick={() => handleRecognition(index)} style={{ backgroundColor: transcript ? 'red' : 'blue', border: 'none', marginRight: '5px' }}>\n            {transcript ? <MdPause size={24} /> : <MdMic size={24} />} {/* Render microphone or pause icon based on transcript */}\n          </button>\n          <button onClick={() => clearTranscript(index)} style={{ backgroundColor: 'gray', border: 'none', marginRight: '5px' }}>\n            <MdStop size={24} /> {/* Render stop icon */}\n          </button>\n          <label>{transcript}</label> {/* Display the recognized speech transcript as label text */}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SpeechToText;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}