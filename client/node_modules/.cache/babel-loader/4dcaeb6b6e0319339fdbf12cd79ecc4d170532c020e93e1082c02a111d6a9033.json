{"ast":null,"code":"var _jsxFileName = \"/home/kadir/client/src/components/SpeechToText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechToText = () => {\n  _s();\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const recognition = new window.webkitSpeechRecognition();\n  useEffect(() => {\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n    recognition.onstart = () => {\n      console.log('Recognition started.');\n      setIsListening(true);\n    };\n    recognition.onend = () => {\n      console.log('Recognition ended.');\n      setIsListening(false);\n    };\n    recognition.onresult = event => {\n      const newTranscript = Array.from(event.results).map(result => result[0].transcript).join('');\n      setTranscript(newTranscript);\n    };\n    return () => {\n      recognition.stop();\n    };\n  }, [recognition]);\n  const toggleListening = () => {\n    if (isListening) {\n      recognition.stop();\n    } else {\n      recognition.start();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleListening,\n      children: isListening ? 'Stop Listening' : 'Start Listening'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: transcript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"wBFUdnzTIp7xb1cAeiXqcsB7V7Q=\");\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SpeechToText","_s","transcript","setTranscript","isListening","setIsListening","recognition","window","webkitSpeechRecognition","continuous","interimResults","lang","onstart","console","log","onend","onresult","event","newTranscript","Array","from","results","map","result","join","stop","toggleListening","start","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kadir/client/src/components/SpeechToText.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst SpeechToText = () => {\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const recognition = new window.webkitSpeechRecognition();\n\n  useEffect(() => {\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n\n    recognition.onstart = () => {\n      console.log('Recognition started.');\n      setIsListening(true);\n    };\n\n    recognition.onend = () => {\n      console.log('Recognition ended.');\n      setIsListening(false);\n    };\n\n    recognition.onresult = event => {\n      const newTranscript = Array.from(event.results)\n        .map(result => result[0].transcript)\n        .join('');\n      setTranscript(newTranscript);\n    };\n\n    return () => {\n      recognition.stop();\n    };\n  }, [recognition]);\n\n  const toggleListening = () => {\n    if (isListening) {\n      recognition.stop();\n    } else {\n      recognition.start();\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={toggleListening}>\n        {isListening ? 'Stop Listening' : 'Start Listening'}\n      </button>\n      <p>{transcript}</p>\n    </div>\n  );\n};\n\nexport default SpeechToText;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMU,WAAW,GAAG,IAAIC,MAAM,CAACC,uBAAuB,CAAC,CAAC;EAExDX,SAAS,CAAC,MAAM;IACdS,WAAW,CAACG,UAAU,GAAG,IAAI;IAC7BH,WAAW,CAACI,cAAc,GAAG,IAAI;IACjCJ,WAAW,CAACK,IAAI,GAAG,OAAO;IAE1BL,WAAW,CAACM,OAAO,GAAG,MAAM;MAC1BC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnCT,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC;IAEDC,WAAW,CAACS,KAAK,GAAG,MAAM;MACxBF,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjCT,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;IAEDC,WAAW,CAACU,QAAQ,GAAGC,KAAK,IAAI;MAC9B,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,OAAO,CAAC,CAC5CC,GAAG,CAACC,MAAM,IAAIA,MAAM,CAAC,CAAC,CAAC,CAACrB,UAAU,CAAC,CACnCsB,IAAI,CAAC,EAAE,CAAC;MACXrB,aAAa,CAACe,aAAa,CAAC;IAC9B,CAAC;IAED,OAAO,MAAM;MACXZ,WAAW,CAACmB,IAAI,CAAC,CAAC;IACpB,CAAC;EACH,CAAC,EAAE,CAACnB,WAAW,CAAC,CAAC;EAEjB,MAAMoB,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAItB,WAAW,EAAE;MACfE,WAAW,CAACmB,IAAI,CAAC,CAAC;IACpB,CAAC,MAAM;MACLnB,WAAW,CAACqB,KAAK,CAAC,CAAC;IACrB;EACF,CAAC;EAED,oBACE5B,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAQ8B,OAAO,EAAEH,eAAgB;MAAAE,QAAA,EAC9BxB,WAAW,GAAG,gBAAgB,GAAG;IAAiB;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACTlC,OAAA;MAAA6B,QAAA,EAAI1B;IAAU;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV,CAAC;AAAChC,EAAA,CAhDID,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAkDlB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}