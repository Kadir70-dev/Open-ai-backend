{"ast":null,"code":"var _jsxFileName = \"/home/kadir/client/src/components/SpeechToText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MdMic, MdPause, MdStop } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechToText = () => {\n  _s();\n  const [transcripts, setTranscripts] = useState(Array(5).fill(''));\n  const [isListening, setIsListening] = useState(Array(5).fill(false));\n  const [buttonDisabled, setButtonDisabled] = useState(Array(5).fill(false));\n  const [timer, setTimer] = useState(Array(5).fill(null));\n  const HOLD_THRESHOLD = 1000; // 1 second threshold\n\n  useEffect(() => {\n    const recognitions = Array(5).fill(null).map(() => {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = true;\n      recognition.interimResults = true;\n      recognition.lang = 'en-US';\n      return recognition;\n    });\n    recognitions.forEach((recognition, index) => {\n      recognition.onstart = () => {\n        setIsListening(prevState => [...prevState.slice(0, index), true, ...prevState.slice(index + 1)]);\n      };\n      recognition.onend = () => {\n        setIsListening(prevState => [...prevState.slice(0, index), false, ...prevState.slice(index + 1)]);\n      };\n      recognition.onresult = event => {\n        const transcript = Array.from(event.results).map(result => result[0].transcript).join('');\n        setTranscripts(prevTranscripts => [...prevTranscripts.slice(0, index), transcript, ...prevTranscripts.slice(index + 1)]);\n      };\n      if (isListening[index]) {\n        recognition.start();\n      } else {\n        recognition.stop();\n      }\n    });\n    return () => {\n      recognitions.forEach(recognition => recognition.stop());\n    };\n  }, [isListening]);\n  const startHoldTimer = (index, action) => {\n    setTimer(prevTimers => {\n      const newTimers = [...prevTimers];\n      newTimers[index] = setTimeout(() => {\n        action(index);\n        setButtonDisabled(prevState => {\n          const newState = [...prevState];\n          newState[index] = true;\n          return newState;\n        });\n      }, HOLD_THRESHOLD);\n      return newTimers;\n    });\n  };\n  const cancelHoldTimer = index => {\n    clearTimeout(timer[index]);\n    setTimer(prevTimers => {\n      const newTimers = [...prevTimers];\n      newTimers[index] = null;\n      return newTimers;\n    });\n  };\n  const toggleListening = index => {\n    if (!buttonDisabled[index]) {\n      setIsListening(prevState => [...prevState.slice(0, index), !prevState[index], ...prevState.slice(index + 1)]);\n    }\n  };\n  const clearTranscript = index => {\n    if (!buttonDisabled[index]) {\n      setTranscripts(prevTranscripts => [...prevTranscripts.slice(0, index), '', ...prevTranscripts.slice(index + 1)]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: transcripts.map((transcript, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onMouseDown: () => startHoldTimer(index, toggleListening),\n        onMouseUp: () => cancelHoldTimer(index),\n        onTouchStart: () => startHoldTimer(index, toggleListening),\n        onTouchEnd: () => cancelHoldTimer(index),\n        disabled: buttonDisabled[index],\n        style: {\n          backgroundColor: isListening[index] ? 'red' : 'blue',\n          border: 'none',\n          marginRight: '5px'\n        },\n        children: isListening[index] ? /*#__PURE__*/_jsxDEV(MdPause, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 35\n        }, this) : /*#__PURE__*/_jsxDEV(MdMic, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onMouseDown: () => startHoldTimer(index, clearTranscript),\n        onMouseUp: () => cancelHoldTimer(index),\n        onTouchStart: () => startHoldTimer(index, clearTranscript),\n        onTouchEnd: () => cancelHoldTimer(index),\n        disabled: buttonDisabled[index],\n        style: {\n          backgroundColor: 'gray',\n          border: 'none',\n          marginRight: '5px'\n        },\n        children: /*#__PURE__*/_jsxDEV(MdStop, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"aoujMcAh9COQirawkJI98jGvLZs=\");\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","useEffect","MdMic","MdPause","MdStop","jsxDEV","_jsxDEV","SpeechToText","_s","transcripts","setTranscripts","Array","fill","isListening","setIsListening","buttonDisabled","setButtonDisabled","timer","setTimer","HOLD_THRESHOLD","recognitions","map","recognition","window","webkitSpeechRecognition","continuous","interimResults","lang","forEach","index","onstart","prevState","slice","onend","onresult","event","transcript","from","results","result","join","prevTranscripts","start","stop","startHoldTimer","action","prevTimers","newTimers","setTimeout","newState","cancelHoldTimer","clearTimeout","toggleListening","clearTranscript","children","style","display","alignItems","marginBottom","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","disabled","backgroundColor","border","marginRight","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kadir/client/src/components/SpeechToText.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MdMic, MdPause, MdStop } from 'react-icons/md'; \n\nconst SpeechToText = () => {\n  const [transcripts, setTranscripts] = useState(Array(5).fill(''));\n  const [isListening, setIsListening] = useState(Array(5).fill(false));\n  const [buttonDisabled, setButtonDisabled] = useState(Array(5).fill(false));\n  const [timer, setTimer] = useState(Array(5).fill(null));\n  const HOLD_THRESHOLD = 1000; // 1 second threshold\n\n  useEffect(() => {\n    const recognitions = Array(5).fill(null).map(() => {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = true;\n      recognition.interimResults = true;\n      recognition.lang = 'en-US';\n      return recognition;\n    });\n\n    recognitions.forEach((recognition, index) => {\n      recognition.onstart = () => {\n        setIsListening(prevState => [...prevState.slice(0, index), true, ...prevState.slice(index + 1)]);\n      };\n\n      recognition.onend = () => {\n        setIsListening(prevState => [...prevState.slice(0, index), false, ...prevState.slice(index + 1)]);\n      };\n\n      recognition.onresult = event => {\n        const transcript = Array.from(event.results)\n          .map(result => result[0].transcript)\n          .join('');\n        setTranscripts(prevTranscripts => [...prevTranscripts.slice(0, index), transcript, ...prevTranscripts.slice(index + 1)]);\n      };\n\n      if (isListening[index]) {\n        recognition.start();\n      } else {\n        recognition.stop();\n      }\n    });\n\n    return () => {\n      recognitions.forEach(recognition => recognition.stop());\n    };\n  }, [isListening]);\n\n  const startHoldTimer = (index, action) => {\n    setTimer(prevTimers => {\n      const newTimers = [...prevTimers];\n      newTimers[index] = setTimeout(() => {\n        action(index);\n        setButtonDisabled(prevState => {\n          const newState = [...prevState];\n          newState[index] = true;\n          return newState;\n        });\n      }, HOLD_THRESHOLD);\n      return newTimers;\n    });\n  };\n\n  const cancelHoldTimer = index => {\n    clearTimeout(timer[index]);\n    setTimer(prevTimers => {\n      const newTimers = [...prevTimers];\n      newTimers[index] = null;\n      return newTimers;\n    });\n  };\n\n  const toggleListening = index => {\n    if (!buttonDisabled[index]) {\n      setIsListening(prevState => [...prevState.slice(0, index), !prevState[index], ...prevState.slice(index + 1)]);\n    }\n  };\n\n  const clearTranscript = index => {\n    if (!buttonDisabled[index]) {\n      setTranscripts(prevTranscripts => [...prevTranscripts.slice(0, index), '', ...prevTranscripts.slice(index + 1)]);\n    }\n  };\n\n  return (\n    <div>\n      {transcripts.map((transcript, index) => (\n        <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n          <button \n            onMouseDown={() => startHoldTimer(index, toggleListening)} \n            onMouseUp={() => cancelHoldTimer(index)} \n            onTouchStart={() => startHoldTimer(index, toggleListening)} \n            onTouchEnd={() => cancelHoldTimer(index)}\n            disabled={buttonDisabled[index]} \n            style={{ backgroundColor: isListening[index] ? 'red' : 'blue', border: 'none', marginRight: '5px' }}\n          >\n            {isListening[index] ? <MdPause size={24} /> : <MdMic size={24} />}\n          </button>\n          <button \n            onMouseDown={() => startHoldTimer(index, clearTranscript)} \n            onMouseUp={() => cancelHoldTimer(index)} \n            onTouchStart={() => startHoldTimer(index, clearTranscript)} \n            onTouchEnd={() => cancelHoldTimer(index)}\n            disabled={buttonDisabled[index]} \n            style={{ backgroundColor: 'gray', border: 'none', marginRight: '5px' }}\n          >\n            <MdStop size={24} />\n          </button>\n          <label>{transcript}</label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SpeechToText;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}