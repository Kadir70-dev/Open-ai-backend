{"ast":null,"code":"var _jsxFileName = \"/home/kadir/client/src/components/SpeechToText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MdMic, MdPause, MdStop } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechToText = () => {\n  _s();\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  useEffect(() => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n    recognition.onstart = () => {\n      setIsListening(true);\n    };\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n    recognition.onresult = event => {\n      let finalTranscript = '';\n      let interimTranscript = '';\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\n        if (event.results[i].isFinal) {\n          finalTranscript += event.results[i][0].transcript;\n        } else {\n          interimTranscript += event.results[i][0].transcript;\n        }\n      }\n      setTranscript(finalTranscript);\n    };\n    if (isListening && !isPaused) {\n      recognition.start();\n    } else {\n      recognition.stop();\n    }\n    return () => {\n      recognition.stop();\n    };\n  }, [isListening, isPaused]);\n  const toggleListening = () => {\n    setIsListening(prevState => !prevState);\n  };\n  const togglePause = () => {\n    setIsPaused(prevState => !prevState);\n  };\n  const clearTranscript = () => {\n    setTranscript('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [...Array(5)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleListening,\n        style: {\n          backgroundColor: isListening ? 'red' : 'blue',\n          border: 'none',\n          marginRight: '5px'\n        },\n        children: isListening ? /*#__PURE__*/_jsxDEV(MdPause, {\n          size: 24,\n          onClick: togglePause\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 28\n        }, this) : /*#__PURE__*/_jsxDEV(MdMic, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 74\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearTranscript,\n        style: {\n          backgroundColor: 'gray',\n          border: 'none',\n          marginRight: '5px'\n        },\n        children: /*#__PURE__*/_jsxDEV(MdStop, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"46OoUOKbNxzp55hJCgOFXgMig1Q=\");\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","useEffect","MdMic","MdPause","MdStop","jsxDEV","_jsxDEV","SpeechToText","_s","transcript","setTranscript","isListening","setIsListening","isPaused","setIsPaused","recognition","window","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onend","onresult","event","finalTranscript","interimTranscript","i","resultIndex","results","length","isFinal","start","stop","toggleListening","prevState","togglePause","clearTranscript","children","Array","map","_","index","style","display","alignItems","marginBottom","onClick","backgroundColor","border","marginRight","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kadir/client/src/components/SpeechToText.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MdMic, MdPause, MdStop } from 'react-icons/md';\n\nconst SpeechToText = () => {\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n\n  useEffect(() => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n\n    recognition.onstart = () => {\n      setIsListening(true);\n    };\n\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n\n    recognition.onresult = event => {\n      let finalTranscript = '';\n      let interimTranscript = '';\n\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\n        if (event.results[i].isFinal) {\n          finalTranscript += event.results[i][0].transcript;\n        } else {\n          interimTranscript += event.results[i][0].transcript;\n        }\n      }\n\n      setTranscript(finalTranscript);\n    };\n\n    if (isListening && !isPaused) {\n      recognition.start();\n    } else {\n      recognition.stop();\n    }\n\n    return () => {\n      recognition.stop();\n    };\n  }, [isListening, isPaused]);\n\n  const toggleListening = () => {\n    setIsListening(prevState => !prevState);\n  };\n\n  const togglePause = () => {\n    setIsPaused(prevState => !prevState);\n  };\n\n  const clearTranscript = () => {\n    setTranscript('');\n  };\n\n  return (\n    <div>\n      {[...Array(5)].map((_, index) => (\n        <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n          <button onClick={toggleListening} style={{ backgroundColor: isListening ? 'red' : 'blue', border: 'none', marginRight: '5px' }}>\n            {isListening ? <MdPause size={24} onClick={togglePause} /> : <MdMic size={24} />} \n          </button>\n          <button onClick={clearTranscript} style={{ backgroundColor: 'gray', border: 'none', marginRight: '5px' }}>\n            <MdStop size={24} />\n          </button>\n          <label>{transcript}</label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SpeechToText;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}