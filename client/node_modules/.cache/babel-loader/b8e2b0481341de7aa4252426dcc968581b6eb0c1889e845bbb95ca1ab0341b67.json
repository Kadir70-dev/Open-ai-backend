{"ast":null,"code":"var _jsxFileName = \"/home/kadir/client/src/components/SpeechToText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MdMic, MdPause, MdStop } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechToText = () => {\n  _s();\n  const [transcripts, setTranscripts] = useState(Array(5).fill(''));\n  const [isListening, setIsListening] = useState(Array(5).fill(false));\n  const [buttonDisabled, setButtonDisabled] = useState(Array(5).fill(false));\n  const [lastClickTime, setLastClickTime] = useState(Array(5).fill(0));\n  const CLICK_THRESHOLD = 1000; // 1 second threshold\n\n  useEffect(() => {\n    const recognitions = Array(5).fill(null).map(() => {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = true;\n      recognition.interimResults = true;\n      recognition.lang = 'en-US';\n      return recognition;\n    });\n    recognitions.forEach((recognition, index) => {\n      recognition.onstart = () => {\n        setIsListening(prevState => [...prevState.slice(0, index), true, ...prevState.slice(index + 1)]);\n      };\n      recognition.onend = () => {\n        setIsListening(prevState => [...prevState.slice(0, index), false, ...prevState.slice(index + 1)]);\n      };\n      recognition.onresult = event => {\n        const transcript = Array.from(event.results).map(result => result[0].transcript).join('');\n        setTranscripts(prevTranscripts => [...prevTranscripts.slice(0, index), transcript, ...prevTranscripts.slice(index + 1)]);\n      };\n      if (isListening[index]) {\n        recognition.start();\n      } else {\n        recognition.stop();\n      }\n    });\n    return () => {\n      recognitions.forEach(recognition => recognition.stop());\n    };\n  }, [isListening]);\n  const handleClick = (index, action) => {\n    const currentTime = Date.now();\n    if (currentTime - lastClickTime[index] > CLICK_THRESHOLD && !buttonDisabled[index]) {\n      action(index);\n      setLastClickTime(prevState => {\n        const newState = [...prevState];\n        newState[index] = currentTime;\n        return newState;\n      });\n      setButtonDisabled(prevState => {\n        const newState = [...prevState];\n        newState[index] = true;\n        return newState;\n      });\n      setTimeout(() => {\n        setButtonDisabled(prevState => {\n          const newState = [...prevState];\n          newState[index] = false;\n          return newState;\n        });\n      }, 1000); // Change this value according to your requirement (in milliseconds)\n    }\n  };\n  const toggleListening = index => {\n    handleClick(index, idx => {\n      setIsListening(prevState => [...prevState.slice(0, idx), !prevState[idx], ...prevState.slice(idx + 1)]);\n    });\n  };\n  const clearTranscript = index => {\n    handleClick(index, idx => {\n      setTranscripts(prevTranscripts => [...prevTranscripts.slice(0, idx), '', ...prevTranscripts.slice(idx + 1)]);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: transcripts.map((transcript, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleListening(index),\n        disabled: buttonDisabled[index],\n        style: {\n          backgroundColor: isListening[index] ? 'red' : 'blue',\n          border: 'none',\n          marginRight: '5px'\n        },\n        children: isListening[index] ? /*#__PURE__*/_jsxDEV(MdPause, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 35\n        }, this) : /*#__PURE__*/_jsxDEV(MdMic, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => clearTranscript(index),\n        disabled: buttonDisabled[index],\n        style: {\n          backgroundColor: 'gray',\n          border: 'none',\n          marginRight: '5px'\n        },\n        children: /*#__PURE__*/_jsxDEV(MdStop, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"GpnM3mgthyyiCwb/MkdSf0L7Q9U=\");\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","useEffect","MdMic","MdPause","MdStop","jsxDEV","_jsxDEV","SpeechToText","_s","transcripts","setTranscripts","Array","fill","isListening","setIsListening","buttonDisabled","setButtonDisabled","lastClickTime","setLastClickTime","CLICK_THRESHOLD","recognitions","map","recognition","window","webkitSpeechRecognition","continuous","interimResults","lang","forEach","index","onstart","prevState","slice","onend","onresult","event","transcript","from","results","result","join","prevTranscripts","start","stop","handleClick","action","currentTime","Date","now","newState","setTimeout","toggleListening","idx","clearTranscript","children","style","display","alignItems","marginBottom","onClick","disabled","backgroundColor","border","marginRight","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kadir/client/src/components/SpeechToText.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MdMic, MdPause, MdStop } from 'react-icons/md'; \n\nconst SpeechToText = () => {\n  const [transcripts, setTranscripts] = useState(Array(5).fill(''));\n  const [isListening, setIsListening] = useState(Array(5).fill(false));\n  const [buttonDisabled, setButtonDisabled] = useState(Array(5).fill(false));\n  const [lastClickTime, setLastClickTime] = useState(Array(5).fill(0));\n  const CLICK_THRESHOLD = 1000; // 1 second threshold\n\n  useEffect(() => {\n    const recognitions = Array(5).fill(null).map(() => {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = true;\n      recognition.interimResults = true;\n      recognition.lang = 'en-US';\n      return recognition;\n    });\n\n    recognitions.forEach((recognition, index) => {\n      recognition.onstart = () => {\n        setIsListening(prevState => [...prevState.slice(0, index), true, ...prevState.slice(index + 1)]);\n      };\n\n      recognition.onend = () => {\n        setIsListening(prevState => [...prevState.slice(0, index), false, ...prevState.slice(index + 1)]);\n      };\n\n      recognition.onresult = event => {\n        const transcript = Array.from(event.results)\n          .map(result => result[0].transcript)\n          .join('');\n        setTranscripts(prevTranscripts => [...prevTranscripts.slice(0, index), transcript, ...prevTranscripts.slice(index + 1)]);\n      };\n\n      if (isListening[index]) {\n        recognition.start();\n      } else {\n        recognition.stop();\n      }\n    });\n\n    return () => {\n      recognitions.forEach(recognition => recognition.stop());\n    };\n  }, [isListening]);\n\n  const handleClick = (index, action) => {\n    const currentTime = Date.now();\n    if (currentTime - lastClickTime[index] > CLICK_THRESHOLD && !buttonDisabled[index]) {\n      action(index);\n      setLastClickTime(prevState => {\n        const newState = [...prevState];\n        newState[index] = currentTime;\n        return newState;\n      });\n      setButtonDisabled(prevState => {\n        const newState = [...prevState];\n        newState[index] = true;\n        return newState;\n      });\n      setTimeout(() => {\n        setButtonDisabled(prevState => {\n          const newState = [...prevState];\n          newState[index] = false;\n          return newState;\n        });\n      }, 1000); // Change this value according to your requirement (in milliseconds)\n    }\n  };\n\n  const toggleListening = index => {\n    handleClick(index, idx => {\n      setIsListening(prevState => [...prevState.slice(0, idx), !prevState[idx], ...prevState.slice(idx + 1)]);\n    });\n  };\n\n  const clearTranscript = index => {\n    handleClick(index, idx => {\n      setTranscripts(prevTranscripts => [...prevTranscripts.slice(0, idx), '', ...prevTranscripts.slice(idx + 1)]);\n    });\n  };\n\n  return (\n    <div>\n      {transcripts.map((transcript, index) => (\n        <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n          <button onClick={() => toggleListening(index)} disabled={buttonDisabled[index]} style={{ backgroundColor: isListening[index] ? 'red' : 'blue', border: 'none', marginRight: '5px' }}>\n            {isListening[index] ? <MdPause size={24} /> : <MdMic size={24} />}\n          </button>\n          <button onClick={() => clearTranscript(index)} disabled={buttonDisabled[index]} style={{ backgroundColor: 'gray', border: 'none', marginRight: '5px' }}>\n            <MdStop size={24} />\n          </button>\n          <label>{transcript}</label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SpeechToText;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}