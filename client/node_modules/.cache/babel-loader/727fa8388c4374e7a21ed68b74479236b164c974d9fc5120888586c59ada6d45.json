{"ast":null,"code":"var _jsxFileName = \"/home/kadir/client/src/components/SpeechToText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MdMic, MdPause, MdStop } from 'react-icons/md'; // Import microphone, pause, and stop icons from react-icons library\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechToText = () => {\n  _s();\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  useEffect(() => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n    recognition.onstart = () => {\n      setIsListening(true);\n    };\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n    recognition.onresult = event => {\n      const transcript = Array.from(event.results).map(result => result[0].transcript).join('');\n      setTranscript(transcript);\n    };\n    if (isListening) {\n      recognition.start();\n    } else {\n      recognition.stop();\n    }\n    return () => {\n      recognition.stop();\n    };\n  }, [isListening]);\n  const toggleListening = () => {\n    setIsListening(prevState => !prevState);\n  };\n  const clearTranscript = () => {\n    setTranscript('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [...Array(5)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleListening,\n        style: {\n          backgroundColor: isListening ? 'red' : 'blue',\n          border: 'none',\n          marginRight: '5px'\n        },\n        children: [isListening ? /*#__PURE__*/_jsxDEV(MdPause, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 28\n        }, this) : /*#__PURE__*/_jsxDEV(MdMic, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 52\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearTranscript,\n        style: {\n          backgroundColor: 'gray',\n          border: 'none',\n          marginRight: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MdStop, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"wBFUdnzTIp7xb1cAeiXqcsB7V7Q=\");\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","useEffect","MdMic","MdPause","MdStop","jsxDEV","_jsxDEV","SpeechToText","_s","transcript","setTranscript","isListening","setIsListening","recognition","window","webkitSpeechRecognition","continuous","interimResults","lang","onstart","onend","onresult","event","Array","from","results","map","result","join","start","stop","toggleListening","prevState","clearTranscript","children","_","index","style","display","alignItems","marginBottom","onClick","backgroundColor","border","marginRight","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kadir/client/src/components/SpeechToText.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MdMic, MdPause, MdStop } from 'react-icons/md'; // Import microphone, pause, and stop icons from react-icons library\n\nconst SpeechToText = () => {\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n\n  useEffect(() => {\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n    \n    recognition.onstart = () => {\n      setIsListening(true);\n    };\n\n    recognition.onend = () => {\n      setIsListening(false);\n    };\n\n    recognition.onresult = event => {\n      const transcript = Array.from(event.results)\n        .map(result => result[0].transcript)\n        .join('');\n      setTranscript(transcript);\n    };\n\n    if (isListening) {\n      recognition.start();\n    } else {\n      recognition.stop();\n    }\n\n    return () => {\n      recognition.stop();\n    };\n  }, [isListening]);\n\n  const toggleListening = () => {\n    setIsListening(prevState => !prevState);\n  };\n\n  const clearTranscript = () => {\n    setTranscript('');\n  };\n\n  return (\n    <div>\n      {[...Array(5)].map((_, index) => (\n        <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n          <button onClick={toggleListening} style={{ backgroundColor: isListening ? 'red' : 'blue', border: 'none', marginRight: '5px' }}>\n            {isListening ? <MdPause size={24} /> : <MdMic size={24} />} {/* Render microphone or pause icon based on listening state */}\n          </button>\n          <button onClick={clearTranscript} style={{ backgroundColor: 'gray', border: 'none', marginRight: '5px' }}>\n            <MdStop size={24} /> {/* Render stop icon */}\n          </button>\n          <label>{transcript}</label> {/* Display the recognized speech transcript as label text */}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SpeechToText;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}