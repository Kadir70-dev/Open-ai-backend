{"ast":null,"code":"var _jsxFileName = \"/home/kadir/client/src/components/SpeechToText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MdMic, MdPause, MdStop } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechToText = () => {\n  _s();\n  const [transcripts, setTranscripts] = useState(Array.from({\n    length: 5\n  }, () => ''));\n  const [isListening, setIsListening] = useState(Array.from({\n    length: 5\n  }, () => false));\n  // eslint-disable-next-line\n  const [isPaused, setIsPaused] = useState(Array.from({\n    length: 5\n  }, () => false));\n  useEffect(() => {\n    const recognitions = Array.from({\n      length: 5\n    }, () => new window.webkitSpeechRecognition());\n    recognitions.forEach((recognition, index) => {\n      recognition.continuous = true;\n      recognition.interimResults = true;\n      recognition.lang = 'en-US';\n      recognition.onstart = () => {\n        console.log(`Recognition ${index} started.`);\n        setIsListening(prevState => prevState.map((state, i) => i === index ? true : state));\n      };\n      recognition.onend = () => {\n        setIsListening(prevState => prevState.map((state, i) => i === index ? false : state));\n      };\n      recognition.onresult = event => {\n        const newTranscript = Array.from(event.results).map(result => result[0].transcript).join('');\n        setTranscripts(prevTranscripts => {\n          const updatedTranscripts = [...prevTranscripts];\n          updatedTranscripts[index] = newTranscript;\n          return updatedTranscripts;\n        });\n      };\n    });\n    return () => {\n      recognitions.forEach(recognition => recognition.stop());\n    };\n  }, []);\n  const toggleListening = index => {\n    setIsListening(prevState => prevState.map((state, i) => i === index ? !state : false));\n    setIsPaused(prevState => prevState.map((state, i) => i === index ? false : state));\n  };\n  const togglePause = index => {\n    setIsPaused(prevState => prevState.map((state, i) => i === index ? !state : state));\n  };\n  const clearTranscript = index => {\n    setTranscripts(prevTranscripts => {\n      const updatedTranscripts = [...prevTranscripts];\n      updatedTranscripts[index] = '';\n      return updatedTranscripts;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [...Array(5)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleListening(index),\n        style: {\n          backgroundColor: isListening[index] ? 'red' : 'blue',\n          border: 'none',\n          marginRight: '5px'\n        },\n        children: isListening[index] ? /*#__PURE__*/_jsxDEV(MdPause, {\n          size: 24,\n          onClick: () => togglePause(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 35\n        }, this) : /*#__PURE__*/_jsxDEV(MdMic, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 94\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => clearTranscript(index),\n        style: {\n          backgroundColor: 'gray',\n          border: 'none',\n          marginRight: '5px'\n        },\n        children: /*#__PURE__*/_jsxDEV(MdStop, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: transcripts[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"nUqTTGYDuRaWlrlAzdY052z31k4=\");\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","useEffect","MdMic","MdPause","MdStop","jsxDEV","_jsxDEV","SpeechToText","_s","transcripts","setTranscripts","Array","from","length","isListening","setIsListening","isPaused","setIsPaused","recognitions","window","webkitSpeechRecognition","forEach","recognition","index","continuous","interimResults","lang","onstart","console","log","prevState","map","state","i","onend","onresult","event","newTranscript","results","result","transcript","join","prevTranscripts","updatedTranscripts","stop","toggleListening","togglePause","clearTranscript","children","_","style","display","alignItems","marginBottom","onClick","backgroundColor","border","marginRight","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kadir/client/src/components/SpeechToText.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MdMic, MdPause, MdStop } from 'react-icons/md';\n\nconst SpeechToText = () => {\n  const [transcripts, setTranscripts] = useState(Array.from({ length: 5 }, () => ''));\n  const [isListening, setIsListening] = useState(Array.from({ length: 5 }, () => false));\n// eslint-disable-next-line\nconst [isPaused, setIsPaused] = useState(Array.from({ length: 5 }, () => false));\n\n  useEffect(() => {\n    const recognitions = Array.from({ length: 5 }, () => new window.webkitSpeechRecognition());\n    recognitions.forEach((recognition, index) => {\n      recognition.continuous = true;\n      recognition.interimResults = true;\n      recognition.lang = 'en-US';\n\n      recognition.onstart = () => {\n        console.log(`Recognition ${index} started.`);\n\n        setIsListening(prevState => prevState.map((state, i) => (i === index ? true : state)));\n      };\n\n      recognition.onend = () => {\n        setIsListening(prevState => prevState.map((state, i) => (i === index ? false : state)));\n      };\n\n      recognition.onresult = event => {\n        const newTranscript = Array.from(event.results)\n          .map(result => result[0].transcript)\n          .join('');\n        setTranscripts(prevTranscripts => {\n          const updatedTranscripts = [...prevTranscripts];\n          updatedTranscripts[index] = newTranscript;\n          return updatedTranscripts;\n        });\n      };\n    });\n\n    return () => {\n      recognitions.forEach(recognition => recognition.stop());\n    };\n  }, []);\n\n  const toggleListening = index => {\n    setIsListening(prevState =>\n      prevState.map((state, i) => (i === index ? !state : false))\n    );\n    setIsPaused(prevState => prevState.map((state, i) => (i === index ? false : state)));\n  };\n\n  const togglePause = index => {\n    setIsPaused(prevState =>\n      prevState.map((state, i) => (i === index ? !state : state))\n    );\n  };\n\n  const clearTranscript = index => {\n    setTranscripts(prevTranscripts => {\n      const updatedTranscripts = [...prevTranscripts];\n      updatedTranscripts[index] = '';\n      return updatedTranscripts;\n    });\n  };\n\n  return (\n    <div>\n      {[...Array(5)].map((_, index) => (\n        <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n          <button onClick={() => toggleListening(index)} style={{ backgroundColor: isListening[index] ? 'red' : 'blue', border: 'none', marginRight: '5px' }}>\n            {isListening[index] ? <MdPause size={24} onClick={() => togglePause(index)} /> : <MdMic size={24} />} \n          </button>\n          <button onClick={() => clearTranscript(index)} style={{ backgroundColor: 'gray', border: 'none', marginRight: '5px' }}>\n            <MdStop size={24} />\n          </button>\n          <label>{transcripts[index]}</label>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SpeechToText;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}