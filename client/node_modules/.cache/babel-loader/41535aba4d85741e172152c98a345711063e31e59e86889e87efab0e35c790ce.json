{"ast":null,"code":"var _jsxFileName = \"/home/kadir/client/src/components/SpeechToText.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MdMic, MdPause, MdStop } from 'react-icons/md';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechToText = () => {\n  _s();\n  const [transcripts, setTranscripts] = useState(Array(5).fill(''));\n  const [isListening, setIsListening] = useState(Array(5).fill(false));\n  const [clickDisabled, setClickDisabled] = useState(false);\n  useEffect(() => {\n    const recognitions = Array(5).fill(null).map(() => {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = true;\n      recognition.interimResults = true;\n      recognition.lang = 'en-US';\n      return recognition;\n    });\n    recognitions.forEach((recognition, index) => {\n      recognition.onstart = () => {\n        setIsListening(prevState => [...prevState.slice(0, index), true, ...prevState.slice(index + 1)]);\n      };\n      recognition.onend = () => {\n        setIsListening(prevState => [...prevState.slice(0, index), false, ...prevState.slice(index + 1)]);\n      };\n      recognition.onresult = event => {\n        const transcript = Array.from(event.results).map(result => result[0].transcript).join('');\n        setTranscripts(prevTranscripts => [...prevTranscripts.slice(0, index), transcript, ...prevTranscripts.slice(index + 1)]);\n      };\n      if (isListening[index]) {\n        recognition.start();\n      } else {\n        recognition.stop();\n      }\n    });\n    return () => {\n      recognitions.forEach(recognition => recognition.stop());\n    };\n  }, [isListening]);\n  const toggleListening = index => {\n    if (!clickDisabled) {\n      setIsListening(prevState => [...prevState.slice(0, index), !prevState[index], ...prevState.slice(index + 1)]);\n      setClickDisabled(true);\n      setTimeout(() => {\n        setClickDisabled(false);\n      }, 1000); // Change this value according to your requirement (in milliseconds)\n    }\n  };\n  const clearTranscript = index => {\n    if (!clickDisabled) {\n      setTranscripts(prevTranscripts => [...prevTranscripts.slice(0, index), '', ...prevTranscripts.slice(index + 1)]);\n      setClickDisabled(true);\n      setTimeout(() => {\n        setClickDisabled(false);\n      }, 1000); // Change this value according to your requirement (in milliseconds)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: transcripts.map((transcript, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleListening(index),\n        style: {\n          backgroundColor: isListening[index] ? 'red' : 'blue',\n          border: 'none',\n          marginRight: '5px'\n        },\n        children: isListening[index] ? /*#__PURE__*/_jsxDEV(MdPause, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 39\n        }, this) : /*#__PURE__*/_jsxDEV(MdMic, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => clearTranscript(index),\n        style: {\n          backgroundColor: 'gray',\n          border: 'none',\n          marginRight: '5px'\n        },\n        children: /*#__PURE__*/_jsxDEV(MdStop, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(SpeechToText, \"S9VyisyeAyxC3/UelneovbP0V0s=\");\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","useEffect","MdMic","MdPause","MdStop","jsxDEV","_jsxDEV","SpeechToText","_s","transcripts","setTranscripts","Array","fill","isListening","setIsListening","clickDisabled","setClickDisabled","recognitions","map","recognition","window","webkitSpeechRecognition","continuous","interimResults","lang","forEach","index","onstart","prevState","slice","onend","onresult","event","transcript","from","results","result","join","prevTranscripts","start","stop","toggleListening","setTimeout","clearTranscript","children","style","display","alignItems","marginBottom","onClick","backgroundColor","border","marginRight","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kadir/client/src/components/SpeechToText.js"],"sourcesContent":["    import React, { useState, useEffect } from 'react';\n    import { MdMic, MdPause, MdStop } from 'react-icons/md'; \n\n    const SpeechToText = () => {\n    const [transcripts, setTranscripts] = useState(Array(5).fill(''));\n    const [isListening, setIsListening] = useState(Array(5).fill(false));\n    const [clickDisabled, setClickDisabled] = useState(false);\n\n    useEffect(() => {\n        const recognitions = Array(5).fill(null).map(() => {\n        const recognition = new window.webkitSpeechRecognition();\n        recognition.continuous = true;\n        recognition.interimResults = true;\n        recognition.lang = 'en-US';\n        return recognition;\n        });\n\n        recognitions.forEach((recognition, index) => {\n        recognition.onstart = () => {\n            setIsListening(prevState => [...prevState.slice(0, index), true, ...prevState.slice(index + 1)]);\n        };\n\n        recognition.onend = () => {\n            setIsListening(prevState => [...prevState.slice(0, index), false, ...prevState.slice(index + 1)]);\n        };\n\n        recognition.onresult = event => {\n            const transcript = Array.from(event.results)\n            .map(result => result[0].transcript)\n            .join('');\n            setTranscripts(prevTranscripts => [...prevTranscripts.slice(0, index), transcript, ...prevTranscripts.slice(index + 1)]);\n        };\n\n        if (isListening[index]) {\n            recognition.start();\n        } else {\n            recognition.stop();\n        }\n        });\n\n        return () => {\n        recognitions.forEach(recognition => recognition.stop());\n        };\n    }, [isListening]);\n\n    const toggleListening = index => {\n        if (!clickDisabled) {\n        setIsListening(prevState => [...prevState.slice(0, index), !prevState[index], ...prevState.slice(index + 1)]);\n        setClickDisabled(true);\n        setTimeout(() => {\n            setClickDisabled(false);\n        }, 1000); // Change this value according to your requirement (in milliseconds)\n        }\n    };\n\n    const clearTranscript = index => {\n        if (!clickDisabled) {\n        setTranscripts(prevTranscripts => [...prevTranscripts.slice(0, index), '', ...prevTranscripts.slice(index + 1)]);\n        setClickDisabled(true);\n        setTimeout(() => {\n            setClickDisabled(false);\n        }, 1000); // Change this value according to your requirement (in milliseconds)\n        }\n    };\n\n    return (\n        <div>\n        {transcripts.map((transcript, index) => (\n            <div key={index} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n            <button onClick={() => toggleListening(index)} style={{ backgroundColor: isListening[index] ? 'red' : 'blue', border: 'none', marginRight: '5px' }}>\n                {isListening[index] ? <MdPause size={24} /> : <MdMic size={24} />}\n            </button>\n            <button onClick={() => clearTranscript(index)} style={{ backgroundColor: 'gray', border: 'none', marginRight: '5px' }}>\n                <MdStop size={24} />\n            </button>\n            <label>{transcript}</label>\n            </div>\n        ))}\n        </div>\n    );\n    };\n\n    export default SpeechToText;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}